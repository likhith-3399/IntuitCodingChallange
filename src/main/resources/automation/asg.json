{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "COAF IDEAL Slave nodes",

  "Parameters": {
    "ProxyRequired": {
      "Description": "Determines if proxies need to be set in userdata",
      "Type": "String",
      "Default": "false"
    },
    "EBSDeviceName": {
      "Description": "The name of the EBS device within Amazon EC2",
      "Type": "String"
    },
    "EBSVolumeSize": {
      "Description": "EBS Volumes size in gigabytes",
      "Type": "String"
    },
    "EBSVolumeType": {
      "Description": "EBS Volume type",
      "Type": "String"
    },
    "EBSDeleteOnTermination": {
      "Description": "Determines whether to delete the volume on instance termination",
      "Type": "String"
    },
    "EBSEncrypted": {
      "Description": "Determines if the EBS should be encypted",
      "Type": "String"
    },
    "ImageId": {
      "Description": "Provides the unique ID of the Amazon Machine Image (AMI)",
      "Type": "AWS::EC2::Image::Id"
    },
    "SlaveInstanceType": {
      "Description": "The type of the ec2 instance to create",
      "Type": "String"
    },
    "SlaveSecurityGroupIds": {
      "Description": "A list that contains the security group IDs for VPC security groups to assign to the EC2 Instance",
      "Type": "CommaDelimitedList"
    },
    "Timezone": {
      "Description": "Timezone",
      "Type": "String",
      "AllowedValues": [
        "New_York",
        "Chicago",
        "Denver",
        "Los_Angeles"
      ]
    },
    "SlaveName": {
      "Description": "Name of the ec2 Instance",
      "Type": "String",
      "Default": "IDEAL Slave node"
    },
    "ChefServer": {
      "Description": "The chef server you want to use",
      "Type": "String"
    },
    "ChefOrg": {
      "Description": "Chef Org for the App instances",
      "Type": "String"
    },
    "SlaveChefRole": {
      "Description": "The chef role that will be run after launch.",
      "Type": "String"
    },
    "ChefEnv": {
      "Description": "Chef Environment Type for the App instances.",
      "Type": "String"
    },
    "ApplicationName": {
      "Description": "Name of application the instance is a part of",
      "Type": "String",
      "Default": "IDEAL"
    },
    "ASV": {
      "Type": "String",
      "Default": "ASVIDEAL"
    },
    "CMDBEnvironment": {
      "Type": "String"
    },
    "OwnerContact": {
      "Type": "String"
    },
    "SlaveMinSize": {
      "Description": "Minimum number of slaves to having running at any given time",
      "Type": "String"
    },
    "SlaveMaxSize": {
      "Description": "Maximum number of slaves to having running at any given time",
      "Type": "String"
    },
    "SlaveSubnets": {
      "Description": "Subnets to launch slave nodes into",
      "Type": "CommaDelimitedList"
    },
    "LoadBalancerNames": {
      "Description": "ELB to connect the auto-scaling group to.",
      "Type": "CommaDelimitedList",
      "Default": ""
    },
    "UUID": {
      "Description": "Unique universal identifier used to identify all nodes in this stack",
      "Type": "String",
      "Default": ""
    },
    "CentrifyEnv": {
      "Description": "Environment to run centrify scripts in",
      "Type": "String"
    },
    "Domain": {
      "Description": "Domain to join",
      "Type": "String"
    },
    "IamInstanceProfile": {
      "Description": "Instance profile",
      "Type": "String"
    },
    "ZabbixRecipe": {
      "Description": "ZabbixRecipe",
      "Type": "String"
    },
    "Uptime": {
      "Type": "String",
      "Description": "Uptime of the ec2 instance",
      "Default": "excluded"
    },
    "ValueStream": {
      "Description": "Value stream this instance belongs to.",
      "Type": "String",
      "Default": "COAF DLR"
    },
    "Environment": {
      "Description": "Environment to which this instance belongs.",
      "Type": "String",
      "Default": "Dev"
    },
    "SplunkClientName": {
      "Description": "Splunk client name",
      "Type": "String"
    }
  },

  "Resources": {
    "SlaveLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "ImageId"
        },
        "InstanceType": {
          "Ref": "SlaveInstanceType"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": { "Ref": "EBSDeviceName" },
            "Ebs": {
              "VolumeSize": { "Ref": "EBSVolumeSize" },
              "VolumeType": { "Ref": "EBSVolumeType" },
              "Encrypted": { "Ref": "EBSEncrypted" },
              "DeleteOnTermination": { "Ref": "EBSDeleteOnTermination" }
            }
          }
        ],
        "SecurityGroups": { "Ref": "SlaveSecurityGroupIds" },
        "IamInstanceProfile": { "Ref": "IamInstanceProfile" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex \n",
                "mkdir /etc/vault-aws-ec2-auth \n",
                "touch nonce \n",
                "uuidgen > /etc/vault-aws-ec2-auth/nonce \n",
                "chmod 777 /etc/vault-aws-ec2-auth/ \n",
                "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1 \n",
                "IP=$(curl 169.254.169.254/latest/meta-data/local-ipv4) \n",
                "if nslookup $IP; then \n",
                "HOSTNAME=$(nslookup $IP | grep 'name = ' | cut -d'=' -f2 | cut -d'.' -f1-4) \n",
                "hostname $HOSTNAME \n",
                "else \n",
                "export HOSTNAME=$( curl 169.254.169.254/latest/meta-data/local-hostname/ )\n",
                "cd /opt/prebuild_depot/COFLinux\n",
                "./ec2-hostname.sh $HOSTNAME > /tmp/hostname.log 2>&1\n",
                "fi \n",
                "cd /tmp/ \n",
                "curl -O https://artifactory.cloud.capitalone.com/artifactory/generic-internalfacing/coafsre/prometheus/setup_node_v2.sh \n",
                "chmod u+x setup_node_v2.sh \n",
                "./setup_node_v2.sh \n",
                "cd /opt/centrify \n",
                "/opt/centrify/domain-join.sh ",
                {"Ref": "Domain"}, " ", {"Ref" : "CentrifyEnv"}, " aws >> /var/log/centrify_stack_trace.log 2>&1 & \n",
                "dzinfo -C | grep ^Group | grep -v isrm | cut -d: -f2 | while read line; do grp=$(echo $line|cut -d, -f1|sed 's/cn=//'); echo \"+${grp}::::\" >>/etc/centrifydc/group.ovr; done \n",
                "mv /etc/localtime /etc/localtime.save; ln -sf /usr/share/zoneinfo/America/",
                {
                  "Ref": "Timezone"
                },
                " /etc/localtime\n",
                "echo ", {"Ref": "UUID" }, " > /tmp/stack_uuid\n",
                "mkdir /etc/mesos-slave \n",
                "echo `hostname -I | cut -d \"\" -f1` >> /etc/mesos-slave/hostname \n",
                "echo `hostname -I | cut -d \"\" -f1` >> /etc/mesos-slave/ip \n",
                "echo `hostname -I | cut -d \"\" -f1`  `hostname` >> /etc/hosts \n",
                "if ", {"Ref": "ProxyRequired"}, "; then \n",
                "export HTTPS_PROXY=http://entproxy.kdc.capitalone.com:8099\n",
                "export HTTP_PROXY=http://entproxy.kdc.capitalone.com:8099\n",
                "export http_proxy=http://entproxy.kdc.capitalone.com:8099\n",
                "export https_proxy=http://entproxy.kdc.capitalone.com:8099\n",
                "export NO_PROXY=169.254.169.254\n",
                "export no_proxy=169.254.169.254\n",
                "fi \n",
                "sed -i \"s/\\[deployment-client\\]/\\[deployment-client\\]\\nclientName = ", {"Ref": "SplunkClientName"}, "\\n/g\" /opt/splunkforwarder/etc/system/local/deploymentclient.conf \n",
                "sleep 60 \n",
                "cd /opt/prebuild_depot/\n",
                "./chef-bootstrap-linux.sh ",
                {"Ref": "ChefServer"}, " ", {"Ref": "ChefOrg"}, " aws ", {"Ref": "SlaveChefRole"},",", {"Ref": "ZabbixRecipe"}, {"Ref": "ChefEnv"}
              ]
            ]
          }
        }
      }
    },

    "SlaveASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LaunchConfigurationName": { "Ref": "SlaveLaunchConfig" },
        "MinSize": { "Ref": "SlaveMinSize" },
        "MaxSize": { "Ref": "SlaveMaxSize" },
        "VPCZoneIdentifier": { "Ref": "SlaveSubnets" },
        "LoadBalancerNames": { "Ref": "LoadBalancerNames"},
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Ref": "SlaveName" },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "ApplicationName",
            "Value": { "Ref": "ApplicationName" },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "ASV",
            "Value": { "Ref": "ASV" },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "CMDBEnvironment",
            "Value": { "Ref": "CMDBEnvironment" },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "OwnerContact",
            "Value": { "Ref": "OwnerContact" },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Uptime",
            "Value": { "Ref": "Uptime" },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "ValueStream",
            "Value": { "Ref": "ValueStream" },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Environment",
            "Value": { "Ref": "Environment" },
            "PropagateAtLaunch": "true"
          }
        ]
      }
    }
  }
}
